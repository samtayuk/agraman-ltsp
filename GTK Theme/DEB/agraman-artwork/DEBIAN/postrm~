#!/bin/sh
# postrm script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see /usr/share/doc/packaging-manual/

case "$1" in
    remove)
	# make sure there are no cdd.defaults settings left
	if [ -L /usr/share/gconf/defaults/20-edubuntu ]; then
	    rm /usr/share/gconf/defaults/20-edubuntu
	fi

	# notify the user what we did
	echo "Reverting desktop defaults ..."
	
	# reload gconf database
	if [ -x /usr/sbin/update-gconf-defaults ]; then
	   /usr/sbin/update-gconf-defaults
	   echo "Reloading gconf database ..."
	fi

	echo "Reverting GDM changes ..."
	update-alternatives --remove gdm-config-derivative /usr/share/edubuntu-artwork/gdm/gdm-cdd.conf

	;;
    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear|purge)
	;;
    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


